"
I am a class that test the DisplayScreen primitives
"
Class {
	#name : #DisplayScreenTest,
	#superclass : #TestCase,
	#category : #'Graphics-Tests-Primitives'
}

{ #category : #accessing }
DisplayScreenTest class >> icoFile [
	^ #[0 0 1 0 1 0 16 16 0 0 1 0 32 0 104 4 0 0 22 0 0 0 40 0 0 0 16 0 0 0 32 0 0 0 1 0 32 0 0 0 0 0 0 4 0 0 18 11 0 0 18 11 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 209 149 49 0 206 147 49 7 211 150 50 79 211 149 48 181 211 149 47 236 212 152 52 254 213 155 59 254 213 154 58 236 210 148 46 172 207 145 42 72 203 140 37 8 206 144 41 0 178 115 23 0 0 0 0 0 197 140 46 0 214 153 50 0 210 150 49 38 211 151 50 157 212 150 49 239 215 160 70 255 225 190 131 255 232 211 176 255 234 217 188 255 232 212 178 255 221 179 109 253 216 165 80 219 210 153 59 106 194 127 16 12 214 150 35 0 152 89 12 0 211 151 50 0 209 149 49 37 211 151 50 196 212 150 48 255 217 165 79 255 235 222 199 255 242 242 242 255 242 243 244 255 241 240 238 255 236 221 195 255 239 231 218 255 238 231 220 255 232 213 181 238 220 180 115 108 171 86 0 3 196 137 46 0 203 145 48 8 210 149 49 125 212 151 49 253 213 155 59 255 232 211 177 255 242 243 245 255 242 242 242 255 242 241 241 255 242 242 242 255 229 199 146 255 222 173 89 255 232 206 161 255 240 235 227 255 238 230 217 231 231 216 189 63 255 255 255 0 209 149 49 74 211 150 50 197 212 150 48 255 223 184 120 255 241 240 238 255 242 242 242 255 242 242 242 255 242 242 242 255 242 242 243 255 239 233 224 255 231 204 158 255 219 169 85 255 224 190 135 255 242 242 243 255 238 233 225 185 209 168 99 29 210 149 49 148 212 151 50 236 213 154 56 255 233 216 187 255 242 243 245 255 242 242 242 255 242 242 242 255 242 242 242 255 243 243 244 255 229 217 202 255 213 192 170 255 231 220 207 255 230 215 195 255 242 242 241 255 240 237 232 245 224 196 149 107 209 149 49 173 212 150 49 248 215 160 70 255 238 229 215 255 242 243 244 255 242 242 242 255 242 242 242 255 242 242 242 255 242 243 243 255 235 230 225 255 192 165 143 255 173 143 129 255 218 210 209 255 243 243 244 255 242 241 240 255 230 207 170 170 210 150 49 166 212 150 49 250 215 161 72 255 238 230 217 255 242 243 244 255 242 242 242 255 242 242 242 255 242 242 242 255 243 243 243 255 231 229 230 255 194 183 192 255 201 189 191 255 215 206 207 255 243 243 243 255 242 242 241 255 230 209 172 194 210 149 49 147 212 151 49 246 214 157 63 255 236 224 205 255 242 243 244 255 242 242 242 255 242 242 242 255 242 242 242 255 243 243 243 255 221 219 227 255 117 100 146 255 120 105 155 255 204 200 218 255 243 243 243 255 242 241 240 254 227 201 157 187 208 148 49 112 212 151 50 237 212 152 51 255 230 207 168 255 242 244 245 255 242 242 242 255 242 242 242 255 242 242 242 255 244 244 243 255 197 193 216 255 79 68 152 255 53 41 141 255 148 142 192 255 241 241 242 255 240 235 227 251 218 175 104 176 208 148 49 77 211 150 50 204 212 150 47 255 220 176 103 255 241 238 233 255 242 242 243 255 242 242 242 255 242 242 242 255 243 243 242 255 234 234 239 255 114 117 201 255 81 86 192 255 197 197 227 255 245 246 246 255 231 210 174 250 212 154 58 128 207 147 49 24 209 149 49 125 212 151 50 239 213 153 54 255 229 203 161 255 242 243 243 255 242 242 242 255 242 242 242 255 242 242 242 255 243 242 243 255 184 195 217 255 159 177 206 255 230 233 239 255 240 233 223 255 220 175 102 205 207 140 30 35 222 158 56 0 208 148 49 44 211 150 50 171 212 150 49 251 214 158 65 255 231 209 172 255 242 241 240 255 242 243 245 255 242 242 243 255 242 242 243 255 238 236 234 255 234 232 229 255 240 236 229 255 225 190 133 229 211 150 49 73 217 162 70 0 209 149 49 0 208 149 49 1 210 149 49 60 210 150 50 180 212 150 49 250 213 155 59 255 225 190 133 255 236 223 203 255 239 234 226 255 241 240 238 255 242 240 236 255 236 224 203 255 224 187 126 209 213 157 64 76 198 156 87 2 210 163 83 0 0 0 0 0 208 149 49 0 227 160 51 0 210 150 49 31 211 151 50 125 211 150 49 203 211 150 49 236 214 157 63 247 217 167 83 247 222 181 114 236 223 184 120 203 217 167 85 125 208 142 34 32 255 255 163 0 183 189 195 1 185 184 184 0 0 0 0 0 0 0 0 0 0 0 0 0 207 146 48 0 207 146 47 1 209 149 49 21 210 149 49 56 210 148 47 82 209 146 42 82 207 143 36 56 202 130 18 21 172 54 0 1 184 86 0 0 183 183 183 0 182 182 182 0 188 188 188 0 224 7 0 0 192 3 0 0 128 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 128 1 0 0 128 1 0 0 224 4 0 0 240 12 0 0]
]

{ #category : #accessing }
DisplayScreenTest class >> saveIcoFileTo: aString [
	aString asFileReference binaryWriteStreamDo: [ :s | s nextPutAll: self icoFile ]
]

{ #category : #accessing }
DisplayScreenTest >> icoPath [
	^ (FileLocator imageDirectory / 'testLogo.ico') asFileReference fullName
]

{ #category : #running }
DisplayScreenTest >> setUp [
	"Sorry the primitive is only for Windows for now!"
	super setUp.
	OSPlatform current isWindows ifFalse: [ ^ self skip ] 
]

{ #category : #running }
DisplayScreenTest >> tearDown [
	self icoPath asFileReference ensureDelete.
	super tearDown
]

{ #category : #tests }
DisplayScreenTest >> testHostWindowIcon [
	self class saveIcoFileTo: self icoPath.
	self assert: (DisplayScreen hostWindowIcon: self icoPath) equals: DisplayScreen.
]

{ #category : #tests }
DisplayScreenTest >> testHostWindowIconNotExistingFile [
	self
		should: [ DisplayScreen hostWindowIcon: self icoPath ]
		raise: FileDoesNotExistException
]

{ #category : #tests }
DisplayScreenTest >> testHostWindowIconWithNotAString [
	self
		should: [ DisplayScreen hostWindowIcon: self class icoFile ]
		raise: Error
]

{ #category : #tests }
DisplayScreenTest >> testHostWindowIconWrongTypeOfArgument [
	self class saveIcoFileTo: self icoPath.
	self assert: (DisplayScreen hostWindowIcon: self icoPath asFileReference) equals: DisplayScreen.
	
]
